package com.aurionpro.test;

import java.util.LinkedList;
import java.util.List;
import com.aurionpro.model.Guitar;
import com.aurionpro.model.GuitarSpecification;
import com.aurionpro.model.Builder;
import com.aurionpro.model.Type;
import com.aurionpro.model.Wood;

import java.util.Iterator;

public class Inventory {
	private List<Guitar> guitars;

	public Inventory() {
		guitars = new LinkedList<>();
	}

	public void addGuitar(String serialNumber, double price, Builder builder, String model, Type type, Wood backWood,
			Wood topWood) {
		Guitar guitar = new Guitar(serialNumber, builder, model, type, backWood, topWood, price);
		guitars.add(guitar);
	}

	public Guitar getGuitar(String serialNumber) {
		for (Guitar guitar : guitars) {
			if (guitar.getSerialNumber().equals(serialNumber)) {
				return guitar;
			}
		}
		return null;
	}

	public List<GuitarSpecification> search(GuitarSpecification searchGuitar) {
		List<Guitar> matchingGuitars = new LinkedList<>();

		for (Guitar guitar : guitars) {
			// Ignore serial number that's unique
			Builder builder = searchGuitar.getBuilder();
			if ((builder != null) && (!builder.equals(Builder.ANY)) && (!builder.equals(guitar.getBuilder())))
				continue;

			String model = searchGuitar.getModel();
			if ((model != null) && (!model.equals("")) && (!model.equals(guitar.getModel())))
				continue;

			Type type = searchGuitar.getType();
			if ((type != null) && (!type.equals(Type.ANY)) && (!type.equals(guitar.getType())))
				continue;

			Wood backWood = searchGuitar.getBackWood();
			if ((backWood != null) && (!backWood.equals(Wood.ANY)) && (!backWood.equals(guitar.getBackWood())))
				continue;

			Wood topWood = searchGuitar.getTopWood();
			if ((topWood != null) && (!topWood.equals(Wood.ANY)) && (!topWood.equals(guitar.getTopWood())))
				continue;

			matchingGuitars.add(guitar);
		}

		return matchingGuitars;
	}
}
